"""glauth 2.X changes

Revision ID: 95f2926f362c
Revises: ab19472d3d97
Create Date: 2021-12-22 12:55:26.362109

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '95f2926f362c'
down_revision = 'ab19472d3d97'
branch_labels = None
depends_on = None


def upgrade():

    # Now we dont want to drop and add the column but alter it
    op.alter_column('user', 'unixid', nullable=False, new_column_name='uidnumber')
    op.alter_column('group', 'unixid', nullable=False, new_column_name='gidnumber')
    
    # TODO Update the foreign keys in users, othergroups_users and included_groups foreign keys

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gidnumber', sa.Integer(), nullable=False))
        batch_op.create_unique_constraint(None, ['gidnumber'])
        batch_op.drop_column('unixid')
        batch_op.alter_column()

    with op.batch_alter_table('included_groups', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'group', ['include_id'], ['gidnumber'])
        batch_op.create_foreign_key(None, 'group', ['included_in_id'], ['gidnumber'])

    with op.batch_alter_table('othergroups_users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['uidnumber'])
        batch_op.create_foreign_key(None, 'group', ['group_id'], ['gidnumber'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uidnumber', sa.Integer(), nullable=False))
        batch_op.create_unique_constraint(None, ['uidnumber'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'group', ['primarygroup'], ['gidnumber'])
        batch_op.drop_column('unixid')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unixid', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'group', ['primarygroup'], ['unixid'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('uidnumber')

    with op.batch_alter_table('othergroups_users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['unixid'])
        batch_op.create_foreign_key(None, 'group', ['group_id'], ['unixid'])

    with op.batch_alter_table('included_groups', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'group', ['include_id'], ['unixid'])
        batch_op.create_foreign_key(None, 'group', ['included_in_id'], ['unixid'])

    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unixid', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('gidnumber')

    # ### end Alembic commands ###
